name: Maven Package Overwrite

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Checkout the repository
      - name: Check out the repository
        uses: actions/checkout@v4

      # Step 2: Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # Location for the settings.xml file

      # Step 3: Create settings.xml for Maven
      - name: Create settings.xml for Maven
        run: |
          cat <<EOF > $GITHUB_WORKSPACE/settings.xml
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      # Step 4: Delete existing artifact (if it exists)
      - name: Delete existing artifact
        run: |
          ARTIFACT_URL="https://maven.pkg.github.com/snowch/vast-db-connectors/ndb/ndb-root/5.1.0/ndb-root-5.1.0.pom"
          echo "Deleting artifact at $ARTIFACT_URL"
          curl -X DELETE \
            -u "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" \
            $ARTIFACT_URL || echo "Artifact not found. Proceeding with deployment."

      # Step 5: Build the project
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Step 6: Publish the package to GitHub Packages
      - name: Publish to GitHub Packages
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
